class circularqueue:
    def __init__(self):
        self.maxsize = 10
        self.queue = [None for i in range(self.maxsize)]
        self.head = -1
        self.tail = -1
    def enqueue(self,x):
        if self.size() == self.maxsize:
            print("Queue is Full")
        elif self.head == -1:
            self.head = 0
            self.tail = 0
            self.queue[self.tail] = x
        else:
            self.tail = (self.tail+1)%self.maxsize
            self.queue[self.tail] = x
    def dequeue(self):
        if self.head == -1:
            return("Queue is Empty!!")
        else:
            data = self.queue[self.head]
            self.head = (self.head+1)%self.maxsize
            return data
    def show(self):
        if self.head == -1:
            print("Queue is Empty!!")
        elif self.tail >= self.head:
            for i in range(self.head,self.tail+1):
                print(self.queue[i],end = " ")
            print()
        else:
            for i in range(self.head,self.maxsize):
                print(self.queue[i],end = " ")
            for i in range(0,self.tail+1):
                print(self.queue[i],end = " ")
            print()
    def size(self):
        if self.head == -1:
            return 0
        elif self.tail >= self.head:
            return((self.tail-self.head)+1)
        else:
            return((self.maxsize-(self.head-self.tail)+1))
cq = circularqueue()
cq.enqueue(1)
cq.enqueue(2)
cq.enqueue(13)
cq.enqueue(11)
cq.enqueue(241)
cq.enqueue(9)
cq.enqueue(10)
cq.enqueue(7)
print("Elements of Circular Queue are:")
cq.show()
print("Size of circular Queue is:",cq.size())
print("Dequeued element from CQ:",cq.dequeue())
print("Elements of Circular Queue are:")
cq.show()
